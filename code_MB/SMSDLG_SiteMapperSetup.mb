Include "MapBasic.def"

Include "Library\ARRAYLib.def"
Include "Library\ConfigFileLib.def"
Include "Library\WINDOWLib.def"

Include "SMSDLG_SiteMapperSetup.def"

Define	CTRL_LBL_MAPPER_OR_LAYOUT		10
Define	CTRL_LST_MAPPER_OR_LAYOUT		11
Define	CTRL_LST_WINDOW_NAMES			12
Define	CTRL_CMD_OK					20
Define	CTRL_LBL_LAYOUT_MAP_PRIMARY		101
Define	CTRL_LST_LAYOUT_MAP_PRIMARY		102
Define	CTRL_LBL_LAYOUT_MAP_SECONDARY		111
Define	CTRL_LST_LAYOUT_MAP_SECONDARY		112
Define	CTRL_LST_SITE1_TABLE_NAMES		1001
Define	CTRL_LST_SITE1_ID_COLS			1002
Define	CTRL_LST_SITE1_UNIQUE_VALUES		1003
Define	CTRL_LST_SITE2_TABLE_NAMES		2001
Define	CTRL_LST_SITE2_ID_COLS			2002
Define	CTRL_CHK_SITE1_ADD_LAYER			1012
Define	CTRL_LBL_SITE1_USE_LAYER_STYLES	1013
Define	CTRL_CHK_SITE1_USE_LAYER_STYLES	1014
Define	CTRL_LBL_SITE1_OVERRIDE_LAYER		1015
Define	CTRL_CHK_SITE1_OVERRIDE_LAYER		1016
Define	CTRL_CHK_SITE2_ADD_LAYER			2012
Define	CTRL_LBL_SITE2_USE_LAYER_STYLES	2013
Define	CTRL_CHK_SITE2_USE_LAYER_STYLES	2014
Define	CTRL_LBL_SITE2_OVERRIDE_LAYER		2015
Define	CTRL_CHK_SITE2_OVERRIDE_LAYER		2016
Define	CTRL_LST_ZOOM_TYPE_1			1020
Define	CTRL_LBL_ZOOM_WIDTH_1			1021
Define	CTRL_TXT_ZOOM_WIDTH_1			1022
Define	CTRL_CHK_KEEP_CURRENT_ZOOM_1		1023
Define	CTRL_LST_ZOOM_TYPE_2			2020
Define	CTRL_LBL_ZOOM_WIDTH_2			2021
Define	CTRL_TXT_ZOOM_WIDTH_2			2022
Define	CTRL_CHK_KEEP_CURRENT_ZOOM_2		2023
Define	CTRL_LST_FILENAME_TYPES			200
Define	CTRL_LBL_FILENAME_COLUMN			201
Define	CTRL_LST_FILENAME_COLUMN			202
Define	CTRL_LBL_UNIQUE_CHAR_VALUES		205
Define	CTRL_CHK_UNIQUE_CHAR_VALUES		206
Define	CTRL_CHK_USE_PROPER_CASE			210
Define	CTRL_CHK_CREATE_JPG				220
Define	CTRL_CHK_CREATE_PDF				221
Define	CTRL_CHK_CREATE_PNG				222
Define	CTRL_LBL_IMAGE_RESOLUTION		230
Define	CTRL_LST_IMAGE_RESOLUTION		231
Define	CTRL_LBL_PDF_DRIVERS			240
Define	CTRL_LST_PDF_DRIVERS			241
Define	CTRL_LBL_OUTPUT_FOLDER			250
Define	CTRL_TXT_OUTPUT_FOLDER			251
Define	CTRL_CMD_OUTPUT_FOLDER_BROWSE		252
Define	CTRL_LBL_ADD_VALUES_TO_LAYOUT		300
Define	CTRL_LBL_ADD_VALUES_TO_LAYOUT2	301
Define	CTRL_LBL_DELAY_ON_NEXTSITE		400
Define	CTRL_LST_DELAY_ON_NEXTSITE		401
Define	CTRL_LBL_DELAY_ON_PRINT			410
Define	CTRL_LST_DELAY_ON_PRINT			411
Define	CTRL_CHK_CLONE_MAIN_WINDOW		500

Declare Sub Handler_OnDialogLoad
Declare Sub Handler_OKClicked
Declare Sub Handler_DialogCancelClicked
Declare Sub Handler_LayoutMap1Clicked
Declare Sub Handler_Site1ColumnsClicked
Declare Sub Handler_LayoutMap2Clicked
Declare Sub Handler_Site2ColumnsClicked
Declare Sub Handler_GetLayersForMapper
Declare Sub Handler_GetMapFramesForLayout
Declare Sub Handler_GetLayersForMapFrame1
Declare Sub Handler_GetLayersForMapFrame2
Declare Sub Handler_FileNameTypeClicked
Declare Sub Handler_WindowTypeClicked
Declare Sub Handler_OnZoomType1Clicked
Declare Sub Handler_OnZoomType2Clicked
Declare Sub Handler_UseSpecificZoom1Clicked
Declare Sub Handler_UseSpecificZoom2Clicked
Declare Sub Handler_Site1LayersClicked
Declare Sub Handler_Site2LayersClicked
Declare Sub Handler_Site1AddLayerClicked
Declare Sub Handler_Site2AddLayerClicked
Declare Sub Handler_CreatePDFClicked
Declare Sub Handler_CreateImageClicked
Declare Sub Handler_ShowDelayNextSiteDlg
Declare Sub Handler_ShowDelayPrintDlg
Declare Sub Handler_BrowseFolderClicked
Declare Function Handler_SiteColumnOnlyUniqueValues(	  ByVal sTab As String
											, ByVal sCol As String
											) As Logical

Declare Sub SMSDLGLoadPDFPrinterDriverNames()

Declare Method FILEBrowseForFolder
	Class "FILELib.MIController"  Lib "FILELib.dll" Alias "BrowseForFolder"
	(ByVal sDescription As String		'Text to display in the dialog
		, ByVal sFolder As String	'Start folder to use in the dialog
		) As String


Dim	astrMapperNames(), astrLayoutNames() As String ' map and layout names
Dim	mnNumLayouts, mnNumMappers, mnNumMappersAll, aintMapperIDs(), aintLayoutIDs() as integer ' map and layout names
Dim	marrFrameMapNames1(), marrFrameMapNames2(), marrSite1TableNames(), marrSite2TableNames(), marrSite1ColNames(), marrSite1CharColNames(), marrSite2ColNames() As String
Dim	marrFrameMapIDs1(), marrFrameMapIDs2() As Integer
Dim	marrSite1ColNamesUnique() as string
Dim	marrPDFNames() As String

Dim	mnWindowType, mnSelectedWindowItem, marrSelectedMapperWID(2), mnSelectedMainWID, mnPDFDriver, mnImageResolution, mnFileNameType As Integer,
	mnDelayNextSiteItem, mnDelayPrintItem As Integer,
	marrSiteTab(2), marrColumnSiteID(2), msColumnFileName As String,
	msOutputFolder As String,
	marrZoomWidth(2) As Float,
	marrZoomType(2) As Integer,
	marrKeepZoom(2), marrAddSiteAsLayer(2), marrStyleOverrideSiteLayer(2), marrTurnOffSiteLayer(2) As Logical,
	mbCheckForNonUniqueValues As Logical,
	mbPrintJPG, mbPrintPNG, mbPrintPDF, mbWinTitleAndFileNameProperCaseAs As Logical,
	mbCreateCopiesOfMainWindow As Logical
'*******************************************************************************
' OpenDialog PROCEDURE
'*******************************************************************************
Function SMSDLG_SiteMapperSetup() As Logical

Dim	nWin as integer

OnError GoTo ErrorOccured

SMSDLG_SiteMapperSetup = FALSE

	ReDim astrMapperNames(0)
	ReDim astrLayoutNames(0)
	ReDim aintMapperIDs(0)
	ReDim aintLayoutIDs(0)

	mnNumLayouts 		= 0
	mnNumMappers 		= 0
	mnNumMappersAll 	= 0

	' Load PDF Driver Names here
	Call SMSDLGLoadPDFPrinterDriverNames

	' get names and IDs of mappers and layouts
	For nWin = 1 to NumWindows()
		Do Case WindowInfo(nWin,WIN_INFO_TYPE)
			Case WIN_MAPPER
				mnNumMappersAll = mnNumMappersAll + 1
				If WindowInfo(nWin, WIN_INFO_PARENT_LAYOUT) = 0 Then
					Call ARRAYAddValueString(astrMapperNames, WindowInfo(nWin, WIN_INFO_NAME))
					Call ARRAYAddValueInteger(aintMapperIDs, WindowInfo(nWin, WIN_INFO_WINDOWID))
				Else
					'**Map window is embedded in a layout window
				End If
			Case WIN_LAYOUT_DESIGNER
				Call ARRAYAddValueString(astrLayoutNames, WindowInfo(nWin, WIN_INFO_NAME))
				Call ARRAYAddValueInteger(aintLayoutIDs, WindowInfo(nWin, WIN_INFO_WINDOWID))

		End Case
	Next

	mnNumMappers	= Ubound(astrMapperNames)
	mnNumLayouts	= Ubound(astrLayoutNames)

	If mnNumMappersAll = 0 then
		Note "You must have at least one Map Window or one Layout Window with an embedded Map Window open to use this tool"
		Exit Sub
	End If

	Dialog
		Title "Site Mapper - Batch Printing Tool"
		'	Width 360
			Calling Handler_OnDialogLoad

		'****************************************************************
		Control GroupBox ' Pan and Zoom controls
			Title "Template Window"
			Position 5,5
			Width 350		Height 55
		Control StaticText
			Title "Export mapper or layout:"
			Position 15,18			ID CTRL_LBL_MAPPER_OR_LAYOUT
			'Width 85
		Control PopupMenu
			Title "Mapper;Layout"
			Position 110,15		ID CTRL_LST_MAPPER_OR_LAYOUT
			Width 65
			Calling Handler_WindowTypeClicked
			Value SMSDLGExportWindowType()

		Control StaticText
			Title "Select template window:" ' could be either mapper/layout
			Position 15,30
		'	Width 160
		Control PopupMenu ' mapper or layout list
			Title ""
			Position 15,41			ID CTRL_LST_WINDOW_NAMES
			Width 160
			Value mnSelectedWindowItem
			Calling Handler_GetLayersForMapper

		Control StaticText
			Title "Select the Mapper or Layout window which will be used as a template for the individual 'site' maps."
					+ " This template window will then be used to produce the individual 'site' maps."
			Position 185,10
			Width 160 Height 70

		'****************************************************************
		Control GroupBox ' Layout Frames with maps
			Title "Layout Map Windows:"
			Position 5, 65
			Width 350		Height 65
		Control StaticText
			Title "Select Main Map:"
			Position 15, 75			ID CTRL_LBL_LAYOUT_MAP_PRIMARY
		'	Width 160
		Control PopupMenu
			Position 15, 85			ID CTRL_LST_LAYOUT_MAP_PRIMARY
			Width 160
			Calling Handler_LayoutMap1Clicked
		Control StaticText
			Title "Select Seconday Map:"
			Position 15, 100			ID CTRL_LBL_LAYOUT_MAP_SECONDARY
		'	Width 100
		Control PopupMenu
			Position 15, 110			ID CTRL_LST_LAYOUT_MAP_SECONDARY
			Width 160
			Calling Handler_LayoutMap2Clicked

		Control StaticText
			Title "Select the Mapper windows from the layout window to use."
				+ " You must select a main mapper window and you can also select a secondary (overview) map."
				+ " Zoom and pan for each can be controlled through the settings below."
			Position 185, 70
			Width 160		Height 55

		'****************************************************************
		Control Groupbox 'Output Settings
			Title "Output Settings"
			Position 360,5
			Width 350		Height 125
		Control StaticText
			Title "Filename using:"
			Position 365, 15		ID CTRL_LBL_FILENAME_COLUMN
			Width 100
		Control PopupMenu ' Filename type
			Position 365, 25		ID CTRL_LST_FILENAME_TYPES
			Width 100
			Title "Char Column;Site ID;Counter"
			Calling Handler_FileNameTypeClicked
			Value SMSDLGGetFileNameType()
		Control StaticText
			Title "ProperCase:"
			Position 475, 28
		Control Checkbox
			Position 520, 28		ID CTRL_CHK_USE_PROPER_CASE
			Value SMSDLGUseProperCase("MapTitle")

		Control PopupMenu ' column names for Filename
			Position 365, 40		ID CTRL_LST_FILENAME_COLUMN
			Width 100
		Control StaticText
			Title "Unique:"
			Position 475, 43		ID CTRL_LBL_UNIQUE_CHAR_VALUES
			Hide
		Control Checkbox
			Position 520, 43		ID CTRL_CHK_UNIQUE_CHAR_VALUES
			Value FALSE
			Hide

		Control StaticText
			Title "Create JPG:"
			Position 365, 55
			Width 42
		Control Checkbox
			Position 410, 55		ID CTRL_CHK_CREATE_JPG
			Value SMSDLGExportToFormat("JPG")
			Calling Handler_CreateImageClicked
		Control StaticText
			Title "Create PNG:"
			Position 425, 55
			Width 42
		Control Checkbox
			Position 470, 55		ID CTRL_CHK_CREATE_PNG
			Value SMSDLGExportToFormat("PNG")
			Calling Handler_CreateImageClicked

		Control StaticText
			Title "Image resolution:"
			Position 370,70		ID CTRL_LBL_IMAGE_RESOLUTION
			Width 70
			Disable
		Control PopupMenu
			Title "96 dpi;150 dpi;300 dpi;600 dpi"
			Position 445,68
			Width 40				ID CTRL_LST_IMAGE_RESOLUTION
			Value SMSDLGGetImageResolutionItem()
			Disable

		Control StaticText
			Title "Create PDF:"
			Position 365, 85
			Width 39
		Control Checkbox
			Position 410, 85		ID CTRL_CHK_CREATE_PDF
			Value SMSDLGExportToFormat("PDF")
			Calling Handler_CreatePDFClicked
		Control StaticText
			Title "PDF driver:"		ID CTRL_LBL_PDF_DRIVERS
			Position 370,95
			Width 45
			Disable
		Control PopupMenu
			Title from variable marrPDFNames
			Position 425,93		ID CTRL_LST_PDF_DRIVERS
			Width 105
			Value SMSDLGGetPDFPrinterDriver()
			Disable

		Control StaticText
			Title "Output folder:"
			Position 365,110		ID CTRL_LBL_OUTPUT_FOLDER
			Width 48
			Disable
		Control EditText 'output folder
			Value SMSDLGGetOutputFolder()
			Position 415,108		ID CTRL_TXT_OUTPUT_FOLDER
			Width 232			Height 12
			Disable
		Control button Title "..."
			position 650,108		ID CTRL_CMD_OUTPUT_FOLDER_BROWSE
			Width 16			Height 13
			calling Handler_BrowseFolderClicked
			Disable

		Control StaticText
			Title "Specify how to name the output files. This could be using a character column in the Site layer,"
					+ " using the select Site ID column, or using a counter (the RowID) with prefixed '000's"
					+ chr$(13)
					+ "Specify the file types to be exported. For JPG and PNG, you can also specify the image resolution."
					+ " For PDF, you can specify the PDF Driver. Specify the folder where the output files will be saved."
			Position 540, 10
			Width 160  Height 80

		'****************************************************************
		Control GroupBox
			Title "Sites Layer - Primary Map"
			Position 5,135
			Width 350		Height 110

		Control StaticText
			Position 11,148
			'Width 35
			Title "Site Layer:"
		Control PopupMenu
			Position 75,145			ID CTRL_LST_SITE1_TABLE_NAMES
			width 100
			Calling Handler_Site1LayersClicked

		Control StaticText
			Position 11,163
			'Width 35
			Title "Site ID Column:"
		Control PopupMenu
			Position 75,160			ID CTRL_LST_SITE1_ID_COLS
			width 100
			Calling Handler_Site1ColumnsClicked

		Control StaticText
			Position 11,180
			Width 155
			Title "Check for non-unique values in Site ID column:"
		Control Checkbox
			Position 170,180			ID CTRL_LST_SITE1_UNIQUE_VALUES
			Value SMSDLGCheckForNonUniqueValues()

		Control StaticText
			Position 11,190
			Width 148
			Title "Add each site as new query layer in mapper:"
		Control Checkbox
			Position 170,190			ID CTRL_CHK_SITE1_ADD_LAYER
			Value SMSDLGAddSiteAsLayer(1)
			Calling Handler_Site1AddLayerClicked

		Control StaticText
			Position 11,200			ID CTRL_LBL_SITE1_USE_LAYER_STYLES
			Width 148 Height 26
			Title "Use the style override and label properties of parent site layer (selected above) for the new child site layer:"
			Disable
		Control Checkbox
			Position 170,208			ID CTRL_CHK_SITE1_USE_LAYER_STYLES
			Value SMSDLGStyleOverideSiteLayer(1)
			Disable

		Control StaticText
			Position 11, 228			ID CTRL_LBL_SITE1_OVERRIDE_LAYER
			Width 148 Height 17
			Title "Turn off the parent layer (selected above):"
			Disable
		Control Checkbox
			Position 170,228			ID CTRL_CHK_SITE1_OVERRIDE_LAYER
			Value SMSDLGTurnOffSiteLayer(1)
			Disable

		Control StaticText
			Title "Select the 'parent' site layer (from the Mapper or Layout specified above) which includes the 'child' records"
					+ " which will be used to generate each new map. The tool can validate that the values in the Site ID column"
					+ " are unique if you expect them to be. Set the option to add each 'child' site as a layer in each new map."
					+ " The 'child' site layer will be added at the same  position in the layer order as the 'parent' layer."
					+ " Set the option to replicate the style override symbology and label properties for"
					+ " the 'child' layer as the 'parent' layer."
			Position 185,140
			Width 160  Height 95

		'****************************************************************
		Control GroupBox ' Pan and Zoom controls Primary Map
			Title "Map Pan and Zoom Settings - Primary Map"
			Position 5, 250
			Width 350		Height 45

		Control StaticText
			Title "Change site map extent to:"
			Position 10,265
'			Width 100
		Control PopupMenu
			Title "Center of MBR;Full Extent;Don't Change"
			Position 110,263		ID CTRL_LST_ZOOM_TYPE_1
			Calling Handler_OnZoomType1Clicked
			Value SMSDLGGetZoomType(1)
			Width 65

		Control StaticText
			Title "Zoom width, km:"
			Position 10,280		ID CTRL_LBL_ZOOM_WIDTH_1
'			Width 58
		Control EditText
			Position 75,278		ID CTRL_TXT_ZOOM_WIDTH_1
			Width 30
			Value FormatNumber$(SMSDLGGetZoomWidth(1))

		Control StaticText
			Title "Current zoom:"
			Position 115,280
			Width 48
		Control Checkbox
			Position 165,280		ID CTRL_CHK_KEEP_CURRENT_ZOOM_1
			Value SMSDLGKeepCurrentZoom(1)
			Calling Handler_UseSpecificZoom1Clicked

		Control StaticText
			Title "Specify how you want to change the map extent relative to each 'child' site. Pan map to the center of the MBR, full extent"
					+ " (for polygons, polylines and multiple records) or don't change at all."
			Position 185,255
			Width 160		Height 40

		'****************************************************************
		Control GroupBox
			Title "Sites Layer - Seconday Map"
			Position 360,135
			Width 350		Height 110

		Control StaticText
			Position 366,148
			'Width 35
			Title "Site Layer:"
		Control PopupMenu
			Position 430,145			ID CTRL_LST_SITE2_TABLE_NAMES
			width 100
			Calling Handler_Site2LayersClicked

		Control StaticText
			Position 366,163
			'Width 35
			Title "Site ID Column:"
		Control PopupMenu
			Position 430,160			ID CTRL_LST_SITE2_ID_COLS
			width 100
			Calling Handler_Site2ColumnsClicked

		Control StaticText
			Position 366,180
			Width 148
			Title "Add each site as new query layer in mapper:"
		Control Checkbox
			Position 525,180			ID CTRL_CHK_SITE2_ADD_LAYER
			Value SMSDLGAddSiteAsLayer(2)
			Calling Handler_Site2AddLayerClicked

		Control StaticText
			Position 366,190			ID CTRL_LBL_SITE2_USE_LAYER_STYLES
			Width 148 Height 26
			Title "Use the style override and label properties of parent site layer (selected above) for the new child site layer:"
			Disable
		Control Checkbox
			Position 525,198			ID CTRL_CHK_SITE2_USE_LAYER_STYLES
			Value SMSDLGStyleOverideSiteLayer(2)
			Disable

		Control StaticText
			Position 366, 218			ID CTRL_LBL_SITE2_OVERRIDE_LAYER
			Width 148 Height 17
			Title "Turn off the parent layer (selected above):"
			Disable
		Control Checkbox
			Position 525,218			ID CTRL_CHK_SITE2_OVERRIDE_LAYER
			Value SMSDLGTurnOffSiteLayer(2)
			Disable

		Control StaticText
			Title "Select the 'parent' site layer (from the 'Secondary Map' Frame specified above). This can be the same layer"
					+ " as in the 'Primary Map' but it can also be a different layer. The values in the Site ID column of this"
					+ " layer must be the same as in the primary site layer as they are used to filter out the 'child' records."
					+ " The other settings are similar to the settings for the 'Primary Map'."
			Position 540,140
			Width 160  Height 95

		'****************************************************************
		Control GroupBox ' Pan and Zoom controls Primary Map
			Title "Map Pan and Zoom Settings - Secondary Map"
			Position 360,250
			Width 350		Height 45

		Control StaticText
			Title "Change site map extent to:"
			Position 365,265
'			Width 100
		Control PopupMenu
			Title "Center of MBR;Full Extent;Don't Change"
			Position 465,263		ID CTRL_LST_ZOOM_TYPE_2
			Calling Handler_OnZoomType2Clicked
			Value SMSDLGGetZoomType(2)
			Width 65

		Control StaticText
			Title "Zoom width, km:"
			Position 365,280		ID CTRL_LBL_ZOOM_WIDTH_2
'			Width 58
		Control EditText
			Position 430,278		ID CTRL_TXT_ZOOM_WIDTH_2
			Width 30
			Value FormatNumber$(SMSDLGGetZoomWidth(2))

		Control StaticText
			Title "Current zoom:"
			Position 470,280
			Width 48
		Control Checkbox
			Position 520,280		ID CTRL_CHK_KEEP_CURRENT_ZOOM_2
			Value SMSDLGKeepCurrentZoom(2)
			Calling Handler_UseSpecificZoom2Clicked

		Control StaticText
			Title "Specify how you want to change the map extent relative to each 'child' site. Pan map to the center of the MBR, full extent"
					+ " (for polygons, polylines and multiple records) or don't change at all."
			Position 540,255
			Width 160		Height 40

		'****************************************************************
		Control Checkbox
			Position 6,300		ID CTRL_CHK_CLONE_MAIN_WINDOW
			Title "Clone main window for each 'child' site and keep these cloned windows open. Not recommended for many sites."
			Value SMSDLGCreateCopiesOfMainWindow()

		'****************************************************************
		Control StaticText
			Title "To add values from any column in the site table on the layout as text (such as the map title), you can"
				+ " use Smart Text in a text frame on to the layout. The Smart Text should be '$mb{SMGetSiteValue(""City"")}'"
				+ " where ""City"" is the column name to read the value from. Use '$mb{SMGetSiteValueErr(""City"")}' to see "
				+ " potential errors accessing the values. You can combine the Smart Text with fixed text. The Smart Text will"
				+ " return an empty string until Site Mapper starts processing the output. For a record with 'New York'"
				+ " in column 'City', the text 'City: $mb{SMGetSiteValue(""City"", 1, 0)}' would show as 'City: New York'"
				+ " Make sure the text frame is large enough to accommodate the full text from the Site table."
			Position 5, 315		ID CTRL_LBL_ADD_VALUES_TO_LAYOUT
			Width 700 height 35

		Control StaticText
			Title "Or you can add an "
				+ "empty text frame on to the layout and then include the column number in the NAME for the text frame. "
				+ "The column number must be in the format '<COL#>', where # is the column number (note '<COL#>' is case "
				+ "sensitive). For example the text frame name could be 'State of <COL5> Map' and the text frame will be "
				+ "updated to 'State of New York Map' if column 5 contains the value 'New York'. Note the text frame name "
				+ "is modified by right clicking on the frame and selecting Frame Properties. Make sure the empty text "
				+ "frame is large enough to accommodate the full text."
			Position 5, 355		ID CTRL_LBL_ADD_VALUES_TO_LAYOUT2
			Width 700 height 35
			ID	56

		Control StaticText
			Title "Add delay before next 'child' site:"
			Position 170,393		ID CTRL_LBL_DELAY_ON_NEXTSITE
'			Hide
		Control PopupMenu
			Title "None;1 sec;2 secs;3 secs"
			Position 290,391		ID CTRL_LST_DELAY_ON_NEXTSITE
			Width 40
			Value SMSDLGGetDelayNextSiteItem()
'			Hide
		Control Button
			Title "?"
			Position 332,390
			Width 15		'Height 13
			calling Handler_ShowDelayNextSiteDlg
'			Hide

		Control StaticText
			Title "Add delay before printing:"
			Position 360,393		ID CTRL_LBL_DELAY_ON_PRINT
		Control PopupMenu
			Title "None;1 sec;2 secs;3 secs"
			Position 460,391		ID CTRL_LST_DELAY_ON_PRINT
			Width 40
			Value SMSDLGGetDelayPrintItem()
		Control Button
			Title "?"
			Position 502,390
			Width 15
			calling Handler_ShowDelayPrintDlg

		' Buttons
		Control OKButton
			Position 575,391		ID CTRL_CMD_OK
			calling Handler_OKClicked
			Width 60
		Control CancelButton
			Title "Close"
			Position 640,391
			Width 60
			calling Handler_DialogCancelClicked

	If CommandInfo(CMD_INFO_DLG_OK) Then
		SMSDLG_SiteMapperSetup = TRUE
	End If

	Exit Function
'--------------------
ErrorOccured:
	Note Err() & " " & Error$() & " SMSDLG_SiteMapperSetup()"

End Function

'*******************************************************************************
'Handler_OnDialogLoad
'*******************************************************************************
Sub Handler_OnDialogLoad

OnError GoTo ErrorOccured

	If mnNumLayouts = 0 Then ' If there are no Layout windows (only mappers) then
		Alter Control CTRL_LBL_MAPPER_OR_LAYOUT Disable ' disable control text for mapper/layout (as only mappers)
		Alter Control CTRL_LST_MAPPER_OR_LAYOUT Disable ' disable, as no layouts open
		Alter Control CTRL_LST_MAPPER_OR_LAYOUT Value 1 ' Select Mapper from popup
	ElseIf mnNumMappers = 0 Then
		Alter Control CTRL_LBL_MAPPER_OR_LAYOUT Disable
		Alter Control CTRL_LST_MAPPER_OR_LAYOUT Disable ' enable, as layouts exist
		Alter Control CTRL_LST_MAPPER_OR_LAYOUT Value 2 ' Select Layout from popup
	Else
		Alter Control CTRL_LBL_MAPPER_OR_LAYOUT Enable
		Alter Control CTRL_LST_MAPPER_OR_LAYOUT Enable ' enable, as layouts exist
		Alter Control CTRL_LST_MAPPER_OR_LAYOUT Value SMSDLGExportWindowType()
	End If

	Call Handler_WindowTypeClicked
	Call Handler_Site1LayersClicked

	Call Handler_Site1AddLayerClicked
	Call Handler_Site2AddLayerClicked

	Call Handler_OnZoomType1Clicked
	Call Handler_OnZoomType2Clicked
	Call Handler_UseSpecificZoom1Clicked
	Call Handler_UseSpecificZoom2Clicked

	Call Handler_CreatePDFClicked
	Call Handler_CreateImageClicked

	Call Handler_FileNameTypeClicked

	Exit Sub
'--------------------
ErrorOccured:
	Note Err() & " " & Error$() & " Handler_OnDialogLoad"

End Sub

'*******************************************************************************
'Handler_OKClicked
'*******************************************************************************
Sub Handler_OKClicked

OnError GoTo ErrorOccured

	' >>>>>>>>>>>>>>>>>> This section Reads Control Values <<<<<<<<<<<<<<<<<<<<

	'******* CLONE & DELAY OPTION SETTINGS ***************************************************
	'Read Control Value for delay
	mnDelayNextSiteItem			= ReadControlValue(CTRL_LST_DELAY_ON_NEXTSITE)
	mnDelayPrintItem			= ReadControlValue(CTRL_LST_DELAY_ON_PRINT)

	'Read Control Value for Cloning Main Window
	mbCreateCopiesOfMainWindow	= ReadControlValue(CTRL_CHK_CLONE_MAIN_WINDOW)


	'******* OUTPUT SETTINGS ***************************************************
	' Read Control Values for print JPG, PNG and PDF Checkboxes
	mbPrintJPG = ReadControlValue(CTRL_CHK_CREATE_JPG)
	mbPrintPNG = ReadControlValue(CTRL_CHK_CREATE_PNG)
	mbPrintPDF = ReadControlValue(CTRL_CHK_CREATE_PDF)

	' check user has selected at least one export option
	If Not SMSDLGExportToFormat("JPG")  and Not SMSDLGExportToFormat("PNG") and Not SMSDLGExportToFormat("PDF") Then
		If not SMSDLGCreateCopiesOfMainWindow() Then
			Note "Please select at least one export option or the 'Clone Main Window' copies option."
			Dialog Preserve
			Exit Sub
		End If
	End If

	' Read Control Value for Output folder
	msOutputFolder = ReadControlValue(CTRL_TXT_OUTPUT_FOLDER)

	' check if output folder valid
	If not FileExists(SMSDLGGetOutputFolder()) then
		Note "Output folder " + chr$(34) + SMSDLGGetOutputFolder() + chr$(34) + " does not appear to be valid. Please try again."
		Dialog Preserve
		Exit Sub
	End If

	' check if output folder valid
	If not len(SMSDLGGetOutputFolder()) > 3  then
		Note "Output folder " + chr$(34) + SMSDLGGetOutputFolder() + chr$(34) + " does not appear to be valid. Please try again."
		Dialog Preserve
		Exit Sub
	End If

	' Read Control Value for Column Name for Filename (and cloned window title)
	mnFileNameType		= ReadControlValue(CTRL_LST_FILENAME_TYPES)
	msColumnFileName	= ""
	If mnFileNameType = 1 Then 'Use Char Column
		If ReadControlValue(CTRL_LST_FILENAME_COLUMN) = 0 Then
			Note "Please select a character column holding the file name for your sites."
			Dialog Preserve
			Exit Sub
		End If
		msColumnFileName = marrSite1CharColNames(ReadControlValue(CTRL_LST_FILENAME_COLUMN))
	End If

	'Read Control Value for PDF Driver
	mnPDFDriver	= ReadControlValue(CTRL_LST_PDF_DRIVERS)

	' Read Control Checkbox for exporting output filename as ProperCase
	mbWinTitleAndFileNameProperCase =  ReadControlValue(CTRL_CHK_USE_PROPER_CASE)

	'Read Control Value for IMG Resolution
	Do Case ReadControlValue(CTRL_LST_IMAGE_RESOLUTION)
		Case 1
			mnImageResolution = 96
		Case 2
			mnImageResolution = 150
		Case 3
			mnImageResolution = 300
		Case 4
			mnImageResolution = 600
	End Case

	'******* TEMPLATE WINDOW AND MAP WINDOWS ***************************************************
	' Read Control for Window Type
	mnWindowType			= ReadControlValue(CTRL_LST_MAPPER_OR_LAYOUT)
	mnSelectedWindowItem	= ReadControlValue(CTRL_LST_WINDOW_NAMES)

	mnSelectedMainWID	 	= 0
	marrSelectedMapperWID(1) = 0
	marrSelectedMapperWID(2) = 0

	'Read Control Values for which Map and Layout to use
	If SMSDLGExportMapWindow() then 	'if Mapper selected, get Mapper Window ID
		mnSelectedMainWID		= aintMapperIDs(mnSelectedWindowItem)
		marrSelectedMapperWID(1) = aintMapperIDs(mnSelectedWindowItem)
	Else  'if Layout selected, get layout win title
		mnSelectedMainWID 		= aintLayoutIDs(mnSelectedWindowItem)

		If ReadControlValue(CTRL_LST_LAYOUT_MAP_PRIMARY) <= 1 Then
			Note "Please select a frame with the main map window from the layout!"
			Dialog Preserve
			Exit Sub
		End If
		marrSelectedMapperWID(1) = marrFrameMapIDs1(ReadControlValue(CTRL_LST_LAYOUT_MAP_PRIMARY))
		marrSelectedMapperWID(2) = marrFrameMapIDs2(ReadControlValue(CTRL_LST_LAYOUT_MAP_SECONDARY))
	End If

	'******* SITE TABLES AND COLUMNS ***************************************************
	' Read control for Site Table
	marrSiteTab(1)				= ""
	marrColumnSiteID(1)			= ""
	If ReadControlValue(CTRL_LST_SITE1_TABLE_NAMES) <= 1 Then
		Note "Please select a Site Layer for the main map window!"
		Dialog Preserve
		Exit Sub
	End If
	If ReadControlValue(CTRL_LST_SITE1_ID_COLS) <= 1 Then
		Note "Please select a Site ID Column for the main map window!"
		Dialog Preserve
		Exit Sub
	End If
	marrSiteTab(1)				= marrSite1TableNames(ReadControlValue(CTRL_LST_SITE1_TABLE_NAMES))
	marrColumnSiteID(1)			= marrSite1ColNames(ReadControlValue(CTRL_LST_SITE1_ID_COLS))
	mbCheckForNonUniqueValues	= ReadControlValue(CTRL_LST_SITE1_UNIQUE_VALUES)

	If mbCheckForNonUniqueValues then
		If not Handler_SiteColumnOnlyUniqueValues(marrSiteTab(1), marrColumnSiteID(1)) then
			Dialog Preserve
			Exit Sub
		End If
	End If

	marrSiteTab(2)				= ""
	marrColumnSiteID(2)			= ""
	If ReadControlValue(CTRL_LST_LAYOUT_MAP_SECONDARY) > 1 And ReadControlValue(CTRL_LST_SITE2_TABLE_NAMES) > 1 Then
		marrSiteTab(2)			= marrSite2TableNames(ReadControlValue(CTRL_LST_SITE2_TABLE_NAMES))
		marrColumnSiteID(2)		= marrSite2ColNames(ReadControlValue(CTRL_LST_SITE2_ID_COLS))
	End If

	' Read Control Checkbox for adding selection as layer
	marrAddSiteAsLayer(1)		=  ReadControlValue(CTRL_CHK_SITE1_ADD_LAYER)
	marrAddSiteAsLayer(2)		=  ReadControlValue(CTRL_CHK_SITE2_ADD_LAYER)

	' Read Control Checkbox for style override and labeling site based on site layer
	marrStyleOverrideSiteLayer(1) =  ReadControlValue(CTRL_CHK_SITE1_USE_LAYER_STYLES)
	marrStyleOverrideSiteLayer(2) =  ReadControlValue(CTRL_CHK_SITE2_USE_LAYER_STYLES)

	' Read Control Checkbox for turning off original layer
	marrTurnOffSiteLayer(1)		=  ReadControlValue(CTRL_CHK_SITE1_OVERRIDE_LAYER)
	marrTurnOffSiteLayer(2)		=  ReadControlValue(CTRL_CHK_SITE2_OVERRIDE_LAYER)

	'******* MAP ZOOM AND CENTER OPTIONS ***************************************************
	' Read Control for Zoom Type
	marrZoomType(1) 			= ReadControlValue(CTRL_LST_ZOOM_TYPE_1)
	marrZoomType(2) 			= ReadControlValue(CTRL_LST_ZOOM_TYPE_2)

	' Read Control for Zoom Width
	marrZoomWidth(1)			= DeformatNumber$(ReadControlValue(CTRL_TXT_ZOOM_WIDTH_1))
	marrZoomWidth(2)			= DeformatNumber$(ReadControlValue(CTRL_TXT_ZOOM_WIDTH_2))

	' Read Control for Don't change zoom
	marrKeepZoom(1)			= ReadControlValue(CTRL_CHK_KEEP_CURRENT_ZOOM_1)
	marrKeepZoom(2)			= ReadControlValue(CTRL_CHK_KEEP_CURRENT_ZOOM_2)

	Exit Sub
'--------------------
ErrorOccured:
	Note Err() & " " & Error$() & " Handler_OKClicked"

End Sub

'*******************************************************************************
'Handler_DialogCancelClicked
'*******************************************************************************
Sub Handler_DialogCancelClicked


End Sub

'*******************************************************************************
'Handler_LayoutMap1Clicked
'*******************************************************************************
Sub Handler_LayoutMap1Clicked

	Call Handler_GetLayersForMapFrame1

End Sub

'*******************************************************************************
'Handler_LayoutMap2Clicked
'*******************************************************************************
Sub Handler_LayoutMap2Clicked

	If ReadControlValue(CTRL_LST_LAYOUT_MAP_SECONDARY) =1 Then
		'Disable secondary map controls
		Alter Control CTRL_CHK_KEEP_CURRENT_ZOOM_2	Disable
		Alter Control CTRL_LST_ZOOM_TYPE_2			Disable
		Alter Control CTRL_LBL_ZOOM_WIDTH_2		Disable
		Alter Control CTRL_TXT_ZOOM_WIDTH_2		Disable

		Alter Control CTRL_LST_SITE2_TABLE_NAMES 	Disable
		Alter Control CTRL_LST_SITE2_ID_COLS	 	Disable
	Else
		'Enable secondary map controls
		Alter Control CTRL_CHK_KEEP_CURRENT_ZOOM_2	Enable
		Alter Control CTRL_LST_ZOOM_TYPE_2			Enable
		Alter Control CTRL_LBL_ZOOM_WIDTH_2		Enable
		Alter Control CTRL_TXT_ZOOM_WIDTH_2		Enable
		Call Handler_OnZoomType2Clicked

		Alter Control CTRL_LST_SITE2_TABLE_NAMES 	Enable
		Alter Control CTRL_LST_SITE2_ID_COLS	 	Enable

		Call Handler_GetLayersForMapFrame2
	End If

End Sub

'*******************************************************************************
'Handler_OnZoomType1Clicked
'*******************************************************************************
Sub Handler_OnZoomType1Clicked

	If ReadControlValue(CTRL_LST_ZOOM_TYPE_1) = 1 then
		alter Control CTRL_LBL_ZOOM_WIDTH_1 Enable
		alter Control CTRL_TXT_ZOOM_WIDTH_1 Enable
		alter Control CTRL_CHK_KEEP_CURRENT_ZOOM_1 Enable
	Else
		alter Control CTRL_LBL_ZOOM_WIDTH_1 Disable
		alter Control CTRL_TXT_ZOOM_WIDTH_1 Disable
		alter Control CTRL_CHK_KEEP_CURRENT_ZOOM_1 Disable
	End If
	Call Handler_UseSpecificZoom1Clicked

End Sub

'*******************************************************************************
'Handler_OnZoomType2Clicked
'*******************************************************************************
Sub Handler_OnZoomType2Clicked

	If ReadControlValue(CTRL_LST_ZOOM_TYPE_2) = 1 then
		alter Control CTRL_LBL_ZOOM_WIDTH_2 Enable
		alter Control CTRL_TXT_ZOOM_WIDTH_2 Enable
		alter Control CTRL_CHK_KEEP_CURRENT_ZOOM_2 Enable
	Else
		alter Control CTRL_LBL_ZOOM_WIDTH_2 Disable
		alter Control CTRL_TXT_ZOOM_WIDTH_2 Disable
		alter Control CTRL_CHK_KEEP_CURRENT_ZOOM_2 Disable
	End If
	Call Handler_UseSpecificZoom2Clicked

End Sub

'*******************************************************************************
'Handler_Site1AddLayerClicked
'*******************************************************************************
Sub Handler_Site1AddLayerClicked

	If ReadControlValue(CTRL_CHK_SITE1_ADD_LAYER) then
		alter Control CTRL_LBL_SITE1_USE_LAYER_STYLES enable
		alter Control CTRL_CHK_SITE1_USE_LAYER_STYLES enable
		alter Control CTRL_LBL_SITE1_OVERRIDE_LAYER enable
		alter Control CTRL_CHK_SITE1_OVERRIDE_LAYER enable
	Else
		alter Control CTRL_LBL_SITE1_USE_LAYER_STYLES Disable
		alter Control CTRL_CHK_SITE1_USE_LAYER_STYLES Disable
		alter Control CTRL_LBL_SITE1_OVERRIDE_LAYER Disable
		alter Control CTRL_CHK_SITE1_OVERRIDE_LAYER Disable
	End If

End Sub

'*******************************************************************************
'Handler_Site2AddLayerClicked
'*******************************************************************************
Sub Handler_Site2AddLayerClicked

	If ReadControlValue(CTRL_CHK_SITE2_ADD_LAYER) then
		alter Control CTRL_LBL_SITE2_USE_LAYER_STYLES enable
		alter Control CTRL_CHK_SITE2_USE_LAYER_STYLES enable
		alter Control CTRL_LBL_SITE2_OVERRIDE_LAYER enable
		alter Control CTRL_CHK_SITE2_OVERRIDE_LAYER enable
	Else
		alter Control CTRL_LBL_SITE2_USE_LAYER_STYLES Disable
		alter Control CTRL_CHK_SITE2_USE_LAYER_STYLES Disable
		alter Control CTRL_LBL_SITE2_OVERRIDE_LAYER Disable
		alter Control CTRL_CHK_SITE2_OVERRIDE_LAYER Disable
	End If

End Sub

'*******************************************************************************
'Handler_ShowDelayNextSiteDlg
'*******************************************************************************
Sub Handler_ShowDelayNextSiteDlg

	Dialog
		Title "What's this"
			Width 200	Height 100

		Control StaticText
			Title "This control allows you to set a short delay" + chr$(13) +
			"before continuing to the next site to be printed" + chr$(13) +
			"before the PDF driver has finished exporting the map." + chr$(13) +
			"Use this setting if the tool appears to end prematurely."
			Position 10,10
			Width 185 Height 55

		Control OKButton
			Position 78, 70

End Sub

'*******************************************************************************
'Handler_ShowDelayPrintDlg
'*******************************************************************************
Sub Handler_ShowDelayPrintDlg

	Dialog
		Title "What's this"
			Width 200	Height 100

		Control StaticText
			Title "This control allows you to set a short delay" + chr$(13) +
			"before printing the Mapper/Layout window in order" + chr$(13) +
			"to prevent the window not being fully updated" + chr$(13) +
			"before the image file is being exported." + chr$(13) +
			"Use this setting if the result appears to be incomplete."
			Position 10,10
			Width 185 Height 55

		Control OKButton
			Position 78, 70

End Sub

'*******************************************************************************
'Browse Button PROCEDURE
'*******************************************************************************
Sub Handler_BrowseFolderClicked

Dim sFolder As String

	sFolder = FILEBrowseForFolder("Output Folder", ReadControlValue(CTRL_TXT_OUTPUT_FOLDER))

	'check sFolder has backslash on end
	If len(sFolder)>1 then
		If Right$(sFolder,1) <> "\" then
			sFolder = sFolder + "\"
		End If
	End If

	alter control CTRL_TXT_OUTPUT_FOLDER value sFolder

End Sub

'*******************************************************************************
'Handler_UseSpecificZoom1Clicked
'*******************************************************************************
Sub Handler_UseSpecificZoom1Clicked

	If ReadControlValue(CTRL_CHK_KEEP_CURRENT_ZOOM_1) Then
		Alter Control CTRL_TXT_ZOOM_WIDTH_1 Disable
	Else
		Alter Control CTRL_TXT_ZOOM_WIDTH_1 Enable
	End If

End Sub

'*******************************************************************************
'Handler_UseSpecificZoom2Clicked
'*******************************************************************************
Sub Handler_UseSpecificZoom2Clicked

	If ReadControlValue(CTRL_CHK_KEEP_CURRENT_ZOOM_2) Then
		Alter Control CTRL_TXT_ZOOM_WIDTH_2 Disable
	Else
		Alter Control CTRL_TXT_ZOOM_WIDTH_2 Enable
	End If

End Sub

'*******************************************************************************
'Handler_WindowTypeClicked Turn off controls for Layout options
'*******************************************************************************
Sub Handler_WindowTypeClicked

	If ReadControlValue(CTRL_LST_MAPPER_OR_LAYOUT) = 1 then ' Map
		Alter Control CTRL_LST_WINDOW_NAMES title from variable astrMapperNames() ' update popup with Mapper names

		Alter Control CTRL_LBL_LAYOUT_MAP_PRIMARY Disable
		Alter Control CTRL_LST_LAYOUT_MAP_PRIMARY Disable
		Alter Control CTRL_LBL_LAYOUT_MAP_SECONDARY Disable
		Alter Control CTRL_LST_LAYOUT_MAP_SECONDARY Disable

		Call Handler_GetLayersForMapper
	ElseIf ReadControlValue(CTRL_LST_MAPPER_OR_LAYOUT) = 2 then ' Layout
		Alter Control CTRL_LST_WINDOW_NAMES title from variable astrLayoutNames() ' update popup with Layout names

		Alter Control CTRL_LBL_LAYOUT_MAP_PRIMARY Enable
		Alter Control CTRL_LST_LAYOUT_MAP_PRIMARY Enable
		Alter Control CTRL_LBL_LAYOUT_MAP_SECONDARY Enable
		Alter Control CTRL_LST_LAYOUT_MAP_SECONDARY Enable

		Call Handler_GetMapFramesForLayout
	End If

End Sub

'*******************************************************************************
'Handler_GetLayersForMapper
'*******************************************************************************
Sub Handler_GetLayersForMapper

Dim 	j, nLayer, nNumLayers, nWID as integer

	If ReadControlValue(CTRL_LST_WINDOW_NAMES) = 0 then
		Exit Sub
	End If

	nWID = aintMapperIDs(ReadControlValue(CTRL_LST_WINDOW_NAMES)) ' selected Mapper Window ID
	If nWID = 0 then
		Exit Sub
	End If
	nNumLayers = MapperInfo(nWID, MAPPER_INFO_LAYERS)

	Redim marrSite1TableNames(0)
	Call ARRAYAddValueString(marrSite1TableNames, "- Select Layer -")

	For nLayer = 1 to nNumLayers
		If LayerInfo(nWID, nLayer, LAYER_INFO_TYPE) = LAYER_INFO_TYPE_NORMAL Then
			Call ARRAYAddValueString(marrSite1TableNames, LayerInfo(nWID, nLayer, LAYER_INFO_NAME))
		End If
	Next

	' update popup menu	with list of layers in Mapper
	Alter Control CTRL_LST_SITE1_TABLE_NAMES Title from variable marrSite1TableNames()

End Sub

'*******************************************************************************
'Handler_GetMapFramesForLayout
'*******************************************************************************
Sub Handler_GetMapFramesForLayout

dim	k, j, nNumFrames, nNumLayers, nMID, nWID, intCountMapperFrames as integer

	If ReadControlValue(CTRL_LST_WINDOW_NAMES) = 0 then
		Exit Sub
	End If

	nWID			= aintLayoutIDs(ReadControlValue(CTRL_LST_WINDOW_NAMES))
	nNumFrames	= LayoutInfo(nWID,LAYOUT_INFO_NUM_ITEMS)

	Redim marrFrameMapNames1(0)
	Redim marrFrameMapIDs1(0)
	Call ARRAYAddValueString(marrFrameMapNames1, "- Select Map Frame -")
	Call ARRAYAddValueInteger(marrFrameMapIDs1, 0)

	Redim marrFrameMapNames2(0)
	Redim marrFrameMapIDs2(0)
	Call ARRAYAddValueString(marrFrameMapNames2, "- No Seconday Map -")
	Call ARRAYAddValueInteger(marrFrameMapIDs2, 0)

	' loop through frames on Layout to find mapper frame ID
	For k = 1 to nNumFrames
		If LayoutItemInfo(nWID,k,LAYOUT_ITEM_INFO_TYPE) = LAYOUT_ITEM_TYPE_MAPPER then
			nMID = LayoutItemInfo(nWID,k,LAYOUT_ITEM_INFO_WIN) 'get mapper frame id

			intCountMapperFrames					= intCountMapperFrames + 1

			Call ARRAYAddValueString(marrFrameMapNames1, WindowInfo(nMID, WIN_INFO_NAME))
			Call ARRAYAddValueInteger(marrFrameMapIDs1, nMID)
			Call ARRAYAddValueString(marrFrameMapNames2, WindowInfo(nMID, WIN_INFO_NAME))
			Call ARRAYAddValueInteger(marrFrameMapIDs2, nMID)
		End If
	Next

	' update popup menu	with list of layers in Layout
	Alter Control CTRL_LST_LAYOUT_MAP_PRIMARY	Title from variable marrFrameMapNames1
	Alter Control CTRL_LST_LAYOUT_MAP_SECONDARY	Title from variable marrFrameMapNames2
	Alter Control CTRL_LST_LAYOUT_MAP_SECONDARY	Enable

	If intCountMapperFrames = 0 then ' No mapper frame found on the Layout
		Note "No mapper frame found on layout window " + chr$(34) + WindowInfo(nWID, WIN_INFO_NAME) + chr$(34) + ". Please fix or choose a different Layout Window."
		Alter control CTRL_LST_MAPPER_OR_LAYOUT value 1 ' change mapper/layout popup back to Mapper
		Call Handler_WindowTypeClicked
		Exit Sub
	ElseIf intCountMapperFrames = 1 then ' only 1 map frame in layout - no option to use a secondary map
		Alter Control CTRL_LST_LAYOUT_MAP_SECONDARY Value 2
		Alter Control CTRL_LST_LAYOUT_MAP_SECONDARY Disable
	End If

End Sub

'*******************************************************************************
'Handler_GetLayersForMapFrame1
'*******************************************************************************
Sub Handler_GetLayersForMapFrame1

dim 	j, nLayer, nNumLayers, nMID, intCountLayers as integer

	If ReadControlValue(CTRL_LST_LAYOUT_MAP_PRIMARY) = 0 Then
		Exit Sub
	End If

	nNumLayers	= 0
	nMID			= marrFrameMapIDs1(ReadControlValue(CTRL_LST_LAYOUT_MAP_PRIMARY))
	Redim marrSite1TableNames(0)

	Call ARRAYAddValueString(marrSite1TableNames, "- Select Layer -")

	If nMID <> 0 Then
		nNumLayers = MapperInfo(nMID, MAPPER_INFO_LAYERS)
'
		For nLayer = 1 to nNumLayers
			If LayerInfo(nMID, nLayer, LAYER_INFO_TYPE) = LAYER_INFO_TYPE_NORMAL Then
				intCountLayers						= intCountLayers + 1
				Call ARRAYAddValueString(marrSite1TableNames, LayerInfo(nMID, nLayer, LAYER_INFO_NAME))
			End If
		Next
	End If

	Alter Control CTRL_LST_SITE1_TABLE_NAMES Title From Variable marrSite1TableNames
	Alter Control CTRL_LST_SITE1_TABLE_NAMES Value 1

	If intCountLayers = 0 then 	' No usable layers
		Note "Mapper frame " + chr$(34) + WindowInfo(nMID, WIN_INFO_NAME) + chr$(34) + " holds no usable layers. Please fix or choose a different Layout Frame"
		Alter Control CTRL_LST_SITE1_TABLE_NAMES Disable
		Exit Sub
	End If

End Sub

'*******************************************************************************
'Handler_GetLayersForMapFrame1
'*******************************************************************************
Sub Handler_GetLayersForMapFrame2

Dim	nLayer, j, nNumLayers, nMID, intCountLayers as integer

	If ReadControlValue(CTRL_LST_LAYOUT_MAP_SECONDARY) = 0 Then
		Exit Sub
	End If

	nNumLayers	= 0
	nMID			= marrFrameMapIDs2(ReadControlValue(CTRL_LST_LAYOUT_MAP_SECONDARY))
	Redim marrSite2TableNames(0)
'	Redim marrSite2TableNames(nNumLayers + 1)
'	marrSite2TableNames(1) = "- Select Layer -" ' first value in array is blank
	Call ARRAYAddValueString(marrSite2TableNames, "- Select Layer -")

	If nMID <> 0 Then
		nNumLayers = MapperInfo(nMID, MAPPER_INFO_LAYERS)
		For nLayer = 1 to nNumLayers
			If LayerInfo(nMID, nLayer, LAYER_INFO_TYPE) = LAYER_INFO_TYPE_NORMAL Then
				intCountLayers						= intCountLayers + 1
				Call ARRAYAddValueString(marrSite2TableNames, LayerInfo(nMID, nLayer, LAYER_INFO_NAME))
			End If
		Next
	End If

	Alter Control CTRL_LST_SITE2_TABLE_NAMES Title From Variable marrSite2TableNames
	Alter Control CTRL_LST_SITE2_TABLE_NAMES Value 1

	If intCountLayers = 0 then 	' No usable layers
		Note "Mapper frame " + chr$(34) + WindowInfo(nMID, WIN_INFO_NAME) + chr$(34) + " holds no usable layers. Please fix or choose a different Layout Frame"
		Alter Control CTRL_LST_SITE2_TABLE_NAMES Disable
		Exit Sub
	End If

End Sub

'*******************************************************************************
'Handler_FileNameTypeClicked
'*******************************************************************************
Sub Handler_FileNameTypeClicked

	If ReadControlValue(CTRL_LST_FILENAME_TYPES) = 1 Then
		If UBound(marrSite1CharColNames()) = 0 Then
'			Note "This table does not contain any character fields. Please use either Counter or SiteID for naming your files"
			Alter Control CTRL_LST_FILENAME_TYPES Value 2
			Exit Sub
		End If

		Alter Control CTRL_LST_FILENAME_COLUMN Enable
	Else
		Alter Control CTRL_LST_FILENAME_COLUMN Disable
	End If

End Sub

'*******************************************************************************
'Handler_CreateImageClicked
'*******************************************************************************
Sub Handler_CreateImageClicked

	If Not ReadControlValue(CTRL_CHK_CREATE_PNG) And Not ReadControlValue(CTRL_CHK_CREATE_JPG) then
		alter Control CTRL_LBL_IMAGE_RESOLUTION Disable
		alter Control CTRL_LST_IMAGE_RESOLUTION Disable
	Else
		alter Control CTRL_LBL_IMAGE_RESOLUTION Enable
		alter Control CTRL_LST_IMAGE_RESOLUTION Enable
		alter Control CTRL_LBL_OUTPUT_FOLDER Enable
		alter Control CTRL_TXT_OUTPUT_FOLDER Enable
		alter Control CTRL_CMD_OUTPUT_FOLDER_BROWSE Enable
	End If

	If Not ReadControlValue(CTRL_CHK_CREATE_JPG) and Not ReadControlValue(CTRL_CHK_CREATE_PNG) And Not ReadControlValue(CTRL_CHK_CREATE_PDF) then 'if all checkboxes unticked
		alter Control CTRL_LBL_OUTPUT_FOLDER Disable
		alter Control CTRL_TXT_OUTPUT_FOLDER Disable
		alter Control CTRL_CMD_OUTPUT_FOLDER_BROWSE Disable
	End If

End sub

'*******************************************************************************
'Handler_CreateImageClicked
'*******************************************************************************
Sub Handler_CreatePDFClicked

	If Not ReadControlValue(CTRL_CHK_CREATE_PDF) Then
		alter Control CTRL_LBL_PDF_DRIVERS Disable
		alter Control CTRL_LST_PDF_DRIVERS Disable
	Else
		alter Control CTRL_LBL_PDF_DRIVERS Enable
		alter Control CTRL_LST_PDF_DRIVERS Enable
		alter Control CTRL_LBL_OUTPUT_FOLDER Enable
		alter Control CTRL_TXT_OUTPUT_FOLDER Enable
		alter Control CTRL_CMD_OUTPUT_FOLDER_BROWSE Enable
	End If

	If Not ReadControlValue(CTRL_CHK_CREATE_JPG) and Not ReadControlValue(CTRL_CHK_CREATE_PNG) And Not ReadControlValue(CTRL_CHK_CREATE_PDF) then 'if all checkboxes unticked
		alter Control CTRL_LBL_OUTPUT_FOLDER Disable
		alter Control CTRL_TXT_OUTPUT_FOLDER Disable
		alter Control CTRL_CMD_OUTPUT_FOLDER_BROWSE Disable
	End If

End Sub

'*******************************************************************************
'SELECT COLUMN TO USE
'*******************************************************************************
Sub Handler_Site1LayersClicked

dim nNumCols, c, d, e, intSumValue as integer
dim sTab, sColName, strCMD as string

	If ReadControlValue(CTRL_LST_SITE1_TABLE_NAMES) > 1 then

		sTab = marrSite1TableNames(ReadControlValue(CTRL_LST_SITE1_TABLE_NAMES))
		nNumCols = NumCols(sTab)

		Redim marrSite1ColNames(0)
		Redim marrSite1CharColNames(0)

		For c = 1 to nNumCols
			sColName = ColumnInfo(sTab,"Col"+c,COL_INFO_NAME)
			If ColumnInfo(sTab, sColName, COL_INFO_TYPE) In (COL_TYPE_CHAR, COL_TYPE_INTEGER, COL_TYPE_SMALLINT, COL_TYPE_DECIMAL, COL_TYPE_FLOAT) Then
				Call ARRAYAddValueString(marrSite1ColNames, sColName)
			End If
			If ColumnInfo(sTab, sColName, COL_INFO_TYPE) = COL_TYPE_CHAR then
				Call ARRAYAddValueString(marrSite1CharColNames, sColName)
			End If
		Next

		Alter Control CTRL_LST_FILENAME_COLUMN Title from variable marrSite1CharColNames()
		Call Handler_FileNameTypeClicked

		Alter Control CTRL_LST_SITE1_ID_COLS Title from variable marrSite1ColNames()

	End If

end Sub

'*******************************************************************************
'SELECT COLUMN TO USE
'*******************************************************************************
Sub Handler_Site1ColumnsClicked

End Sub

'*******************************************************************************
'SELECT COLUMN TO USE
'*******************************************************************************
Sub Handler_Site2LayersClicked

dim nNumCols, c as integer
dim sTab, sColName as string

	If ReadControlValue(CTRL_LST_SITE2_TABLE_NAMES) > 1 then

		sTab		= marrSite2TableNames(ReadControlValue(CTRL_LST_SITE2_TABLE_NAMES))
		nNumCols	= NumCols(sTab)
		Redim marrSite2ColNames(0)

		For c = 1 to nNumCols
			sColName = ColumnInfo(sTab, "Col"+c, COL_INFO_NAME)
			If ColumnInfo(sTab, sColName, COL_INFO_TYPE) In (COL_TYPE_CHAR, COL_TYPE_LARGEINT, COL_TYPE_INTEGER, COL_TYPE_SMALLINT) Then
				Call ARRAYAddValueString(marrSite2ColNames, sColName)
			End If
		Next

		Alter Control CTRL_LST_SITE2_ID_COLS Title from variable marrSite2ColNames()

	End If

end Sub

'*******************************************************************************
'SELECT COLUMN TO USE
'*******************************************************************************
Sub Handler_Site2ColumnsClicked

End Sub

'*******************************************************************************
'Check SITE ID column for non-unique values
'*******************************************************************************
Function Handler_SiteColumnOnlyUniqueValues(	  ByVal sTab As String
									, ByVal sCol As String
									) As Logical

Dim	aCol As Alias,
	nRows As Integer,
	sSiteIDs As String

Handler_SiteColumnOnlyUniqueValues = FALSE

	aCol = sTab & "." & sCol

	Select aCol "SITE_ID", Count(*) "NUMRECORDS"
		From sTab
		Group By aCol
		Into __COUNT__SITEIDS NoSelect Hide

	If TableInfo(__COUNT__SITEIDS, TAB_INFO_NROWS) > 0 Then
		Select *
			From __COUNT__SITEIDS
			Where NUMRECORDS > 1
			Order By SITE_ID
			Into __NONUNIQUE__SITEIDS NoSelect Hide
		nRows	= TableInfo(__NONUNIQUE__SITEIDS, TAB_INFO_NROWS)

		If nRows > 0 Then
			Fetch First from __NONUNIQUE__SITEIDS
			Do Until EOT(__NONUNIQUE__SITEIDS)
				If sSiteIDs = "" Then
					sSiteIDs = "'" & __NONUNIQUE__SITEIDS.SITE_ID & "'"
				Else
					sSiteIDs = sSiteIDs & ", '" & __NONUNIQUE__SITEIDS.SITE_ID & "'"
				End If

				If __NONUNIQUE__SITEIDS.ROWID >= 5 Then
					Exit Do
				End If
				Fetch Next from __NONUNIQUE__SITEIDS
			Loop

			If nRows = 1 Then
				Note "Site ID Column '" & sCol & "' in Site Table '" & sTab
					& "' holds " & FormatNumber$(nRows) & " non-unique value, ( " & sSiteIDs & " )"
			ElseIf nRows < 6 Then
				Note "Site ID Column '" & sCol & "' in Site Table '" & sTab
					& "' holds " & FormatNumber$(nRows) & " non-unique values, ( " & sSiteIDs & " )"
			Else
				Note "Site ID Column '" & sCol & "' in Site Table '" & sTab
					& "' holds " & FormatNumber$(nRows) & " non-unique values, ( " & sSiteIDs & ", ... )"
			End If
		Else
			Handler_SiteColumnOnlyUniqueValues = TRUE
		End If
		Close Table __NONUNIQUE__SITEIDS
	Else
		Handler_SiteColumnOnlyUniqueValues = TRUE
	End If
	Close Table __COUNT__SITEIDS

End Function

'**********************************************************************
Function SMSDLGExportWindowType() As Integer		'1 = Map Window; 2 = Layout Window
	If mnWindowType = 0 Then
		mnWindowType = 1
	End If
	SMSDLGExportWindowType = mnWindowType
End Function

'**********************************************************************
Function SMSDLGExportMapWindow() As Logical
	SMSDLGExportMapWindow = (SMSDLGExportWindowType() = 1)
End Function

'**********************************************************************
Function SMSDLGExportLayoutWindow() As Logical
	SMSDLGExportLayoutWindow = (Not SMSDLGExportMapWindow())
End Function

'**********************************************************************
Function SMSDLGMainWID() As Integer
	If SMSDLGExportMapWindow() Then
		SMSDLGMainWID	= SMSDLGSelectedMapperWID(1)
	Else
		SMSDLGMainWID	= SMSDLGSelectedLayoutWID()
	End If
End Function

'**********************************************************************
Function SMSDLGMainWindowType$() As String
	If SMSDLGExportMapWindow() Then
		SMSDLGMainWindowType$	= "Mapper"
	Else
		SMSDLGMainWindowType$	= "Layout"
	End If
End Function

'**********************************************************************
Function SMSDLGSelectedMapperWID(ByVal nLevel As Integer) As Integer
	If nLevel = 1 Then
		SMSDLGSelectedMapperWID = marrSelectedMapperWID(nLevel)
	Else
		SMSDLGSelectedMapperWID = marrSelectedMapperWID(2)
	End If
End Function
'**********************************************************************
Function SMSDLGUseSecondaryMap() As Logical
	SMSDLGUseSecondaryMap = (marrSelectedMapperWID(2) <> 0)
End Function
'**********************************************************************
Function SMSDLGNumberOfMaps() As Integer
	SMSDLGNumberOfMaps = IIf(SMSDLGUseSecondaryMap(), 2, 1)
End Function


'**********************************************************************
Function SMSDLGSelectedLayoutWID() As Integer
	SMSDLGSelectedLayoutWID = mnSelectedMainWID
End Function

'**********************************************************************
Function SMSDLGGetOutputFolder() As String
	If msOutputFolder = "" Then
		msOutputFolder = GetFolderPath$(FOLDER_MYDOCS)
	End If
	'check msOutputFolder has backslash on end
	If Right$(msOutputFolder, 1) <> "\" then
		msOutputFolder = msOutputFolder + "\"
	End If

	SMSDLGGetOutputFolder = msOutputFolder
End Function

'**********************************************************************
Function SMSDLGGetPDFPrinterDriver() As Integer
	If mnPDFDriver = 0 Then
		mnPDFDriver = 1
	End If
	SMSDLGGetPDFPrinterDriver = mnPDFDriver
End Function

'**********************************************************************
Sub SMSDLGLoadPDFPrinterDriverNames()

Dim	sMIVersion As String,
	nMIVersion As Integer

	nMIVersion	= SystemInfo(SYS_INFO_MIVERSION)
	If nMIVersion >= 1900 Then
		sMIVersion	= Str$(nMIVersion)
	Else
		Set Format Number "9,999.9"
		sMIVersion	= Format$(nMIVersion/100,",#.#")
		Set Format Number "Local"
	End If

	Redim marrPDFNames(3)
	marrPDFNames(1) = "MapInfo PDF Printer Version " + sMIVersion + " x64"
	marrPDFNames(2) = "Adobe PDF"
	marrPDFNames(3) = "Microsoft Print to PDF"
'	marrPDFNames(4) = "PDF995"

End Sub

'**********************************************************************
Function SMSDLGGetPDFPrinterDriver$() As String

Dim	sMIVersion As String,
	nMIVersion As Integer

	Do Case SMSDLGGetPDFPrinterDriver()
		Case 1
			nMIVersion	= SystemInfo(SYS_INFO_MIVERSION)
			If nMIVersion >= 1900 Then
				sMIVersion	= Str$(nMIVersion)
			Else
				Set Format Number "9,999.9"
				sMIVersion	= Format$(nMIVersion/100,",#.#")
				Set Format Number "Local"
			End If
			SMSDLGGetPDFPrinterDriver$	= "MapInfo PDF Printer Version " + sMIVersion + " x64"
		Case 2
			SMSDLGGetPDFPrinterDriver$	= "Adobe PDF"
		Case 3
			SMSDLGGetPDFPrinterDriver$	= "Microsoft Print to PDF"
'		Case 4
'			SMSDLGGetPDFPrinterDriver$	= "PDF995"
	End Case
End Function

'**********************************************************************
Function SMSDLGGetImageResolutionItem() As Integer
	Do Case SMSDLGGetImageResolution()
		Case 96
			SMSDLGGetImageResolutionItem = 1
		Case 150
			SMSDLGGetImageResolutionItem = 2
		Case 300
			SMSDLGGetImageResolutionItem = 3
		Case 600
			SMSDLGGetImageResolutionItem = 4
	End Case
End Function
'**********************************************************************
Function SMSDLGGetImageResolution() As Integer
	If mnImageResolution = 0 Then
		mnImageResolution = 96
	End If
	SMSDLGGetImageResolution = mnImageResolution
End Function

'**********************************************************************
Function SMSDLGGetFileNameType() As Integer		'1: Char Column; 2: Site ID; 3: Counter
	If mnFileNameType = 0 Then
		mnFileNameType		= 2
	End If
	SMSDLGGetFileNameType = mnFileNameType
End Function

'**********************************************************************
Function SMSDLGGetSiteTab(ByVal nLevel As Integer) As String
	If nLevel = 1 Then
		SMSDLGGetSiteTab = marrSiteTab(nLevel)
	Else
		SMSDLGGetSiteTab = marrSiteTab(2)
	End If
End Function

'**********************************************************************
Function SMSDLGGetSiteColumn(ByVal nLevel As Integer, ByVal sColumnType As String) As String
	If nLevel = 1 Then
		Do Case sColumnType
			Case "FILENAME"
				SMSDLGGetSiteColumn = msColumnFileName
			Case "SITEID", "ID"
				SMSDLGGetSiteColumn = marrColumnSiteID(nLevel)
		End Case
	Else
		Do Case sColumnType
			Case "SITEID", "ID"
				SMSDLGGetSiteColumn = marrColumnSiteID(2)
		End Case
	End If
End Function
'**********************************************************************
Function SMSDLGCheckForNonUniqueValues() As Logical

	SMSDLGCheckForNonUniqueValues	= mbCheckForNonUniqueValues

End Function

'**********************************************************************
Function SMSDLGQuerySiteTab(ByVal nLevel As Integer) As Logical
	SMSDLGQuerySiteTab = FALSE
	If SMSDLGGetSiteTab(nLevel) = "" Then
		Exit Function
	ElseIf SMSDLGGetSiteColumn(nLevel, "SITEID") = "" Then
		Exit Function
	End If
	SMSDLGQuerySiteTab = TRUE
End Function

'**********************************************************************
Function SMSDLGAddSiteAsLayer(ByVal nLevel As Integer) As Logical
	If nLevel = 1 Then
		SMSDLGAddSiteAsLayer = marrAddSiteAsLayer(nLevel)
	Else
		SMSDLGAddSiteAsLayer = marrAddSiteAsLayer(2)
	End If
End Function
'**********************************************************************
Function SMSDLGStyleOverideSiteLayer(ByVal nLevel As Integer) As Logical
	If nLevel = 1 Then
		SMSDLGStyleOverideSiteLayer = marrStyleOverrideSiteLayer(nLevel)
	Else
		SMSDLGStyleOverideSiteLayer = marrStyleOverrideSiteLayer(2)
	End If
End Function

'**********************************************************************
Function SMSDLGTurnOffSiteLayer(ByVal nLevel As Integer) As Logical
	If nLevel = 1 Then
		SMSDLGTurnOffSiteLayer = marrTurnOffSiteLayer(nLevel)
	Else
		SMSDLGTurnOffSiteLayer = marrTurnOffSiteLayer(2)
	End If
End Function

'**********************************************************************
Function SMSDLGGetZoomWidth(ByVal nLevel As Integer) As Float
	If nLevel = 1 Then
		If marrZoomWidth(nLevel) = 0 Then
			marrZoomWidth(nLevel) = 5.0	'km
		End If
		SMSDLGGetZoomWidth = marrZoomWidth(nLevel)
	Else
		If marrZoomWidth(2) = 0 Then
			marrZoomWidth(2) = 5 * SMSDLGGetZoomWidth(1)
		End If
		SMSDLGGetZoomWidth = marrZoomWidth(2)
	End If
End Function

'**********************************************************************
Function SMSDLGKeepCurrentZoom(ByVal nLevel As Integer) As Logical
	If nLevel = 1 Then
		SMSDLGKeepCurrentZoom = marrKeepZoom(nLevel)
	Else
		SMSDLGKeepCurrentZoom = marrKeepZoom(2)
	End If
End Function
'**********************************************************************
Function SMSDLGGetZoomType(ByVal nLevel As Integer) As Logical
	If nLevel = 1 Then
		If marrZoomType(nLevel) = 0 Then
			marrZoomType(nLevel) = 1
		End If
		SMSDLGGetZoomType = marrZoomType(nLevel)
	Else
		If marrZoomType(2) = 0 Then
			marrZoomType(2) = 1
		End If
		SMSDLGGetZoomType = marrZoomType(2)
	End If
End Function

'**********************************************************************
Function SMSDLGExportToFormat(ByVal sType As String) As Logical	'"PNG, "JPG", "PDF"
	Do Case sType
		Case "JPG", "JPEG"
			SMSDLGExportToFormat = mbPrintJPG
		Case "PNG"
			SMSDLGExportToFormat = mbPrintPNG
		Case "PDF"
			SMSDLGExportToFormat = mbPrintPDF
	End Case
End Function

'**********************************************************************
Function SMSDLGUseProperCase(ByVal sType As String) As Logical	'"MapTitle", "LayoutTitle", "FileName" ' Currently all use the same settings
	Do Case sType
		Case "MapTitle"
			SMSDLGUseProperCase = mbWinTitleAndFileNameProperCase
		Case "LayoutTitle"
			SMSDLGUseProperCase = mbWinTitleAndFileNameProperCase
		Case "FileName"
			SMSDLGUseProperCase = mbWinTitleAndFileNameProperCase
	End Case
End Function

'**********************************************************************
Function SMSDLGGetDelayNextSiteItem() As Integer
	If mnDelayNextSiteItem = 0 Then
		mnDelayNextSiteItem = 1
	End If
	SMSDLGGetDelayNextSiteItem = mnDelayNextSiteItem
End Function
'**********************************************************************
Function SMSDLGGetDelayNextSiteMiliSecs() As Integer
	Do Case SMSDLGGetDelayNextSiteItem()
		Case 1
			SMSDLGGetDelayNextSiteMiliSecs = 0
		Case 2
			SMSDLGGetDelayNextSiteMiliSecs = 1000
		Case 3
			SMSDLGGetDelayNextSiteMiliSecs = 2000
		Case 4
			SMSDLGGetDelayNextSiteMiliSecs = 3000
	End Case
End Function
'**********************************************************************
Function SMSDLGDelayOnNextSite() As Logical
	SMSDLGDelayOnNextSite = (SMSDLGGetDelayNextSiteItem() > 1)
End Function

'**********************************************************************
Function SMSDLGGetDelayPrintItem() As Integer
	If mnDelayPrintItem = 0 Then
		mnDelayPrintItem = 1
	End If
	SMSDLGGetDelayPrintItem = mnDelayPrintItem
End Function
'**********************************************************************
Function SMSDLGGetDelayPrintMiliSecs() As Integer
	Do Case SMSDLGGetDelayPrintItem()
		Case 1
			SMSDLGGetDelayPrintMiliSecs = 0
		Case 2
			SMSDLGGetDelayPrintMiliSecs = 1000
		Case 3
			SMSDLGGetDelayPrintMiliSecs = 2000
		Case 4
			SMSDLGGetDelayPrintMiliSecs = 3000
	End Case
End Function
'**********************************************************************
Function SMSDLGDelayOnPrintWindow() As Logical
	SMSDLGDelayOnPrintWindow = (SMSDLGGetDelayPrintItem() > 1)
End Function

'**********************************************************************
Function SMSDLGCreateCopiesOfMainWindow() As Logical
	SMSDLGCreateCopiesOfMainWindow = mbCreateCopiesOfMainWindow
End Function


'**********************************************************************
'**********************************************************************
Sub SMSDLGSaveUserSettings(ByVal sFile As String)

Dim	nLevel As Integer

OnError GoTo ErrorOccured

	Call CONFIGWriteKey(sFile, "OUTPUT", "WINDOWTYPE", Str$(SMSDLGExportWindowType()))

	Call CONFIGWriteKey(sFile, "OUTPUT", "MAINWINDOWID", Str$(SMSDLGMainWID()))
	Call CONFIGWriteKey(sFile, "OUTPUT", "MAINWINDOWNAME", WindowInfo(SMSDLGMainWID(), WIN_INFO_NAME))

	Call CONFIGWriteKey(sFile, "OUTPUT", "JPG", IIf(SMSDLGExportToFormat("JPG"), 1, 0))
	Call CONFIGWriteKey(sFile, "OUTPUT", "PNG", IIf(SMSDLGExportToFormat("PNG"), 1, 0))
	Call CONFIGWriteKey(sFile, "OUTPUT", "PDF", IIf(SMSDLGExportToFormat("PDF"), 1, 0))
	Call CONFIGWriteKey(sFile, "OUTPUT", "PDFDRIVER", Str$(SMSDLGGetPDFPrinterDriver()))
	Call CONFIGWriteKey(sFile, "OUTPUT", "RESOLUTION", Str$(SMSDLGGetImageResolution()))
	Call CONFIGWriteKey(sFile, "OUTPUT", "FILENAMETYPE", Str$(SMSDLGGetFileNameType()))
	Call CONFIGWriteKey(sFile, "OUTPUT", "OUTPUTFOLDER", SMSDLGGetOutputFolder())

	Call CONFIGWriteKey(sFile, "OUTPUT", "WAITONNEXTSITE", Str$(SMSDLGGetDelayNextSiteItem()))
	Call CONFIGWriteKey(sFile, "OUTPUT", "WAITONPRINT", Str$(SMSDLGGetDelayPrintItem()))
	Call CONFIGWriteKey(sFile, "OUTPUT", "CLONEMAINWINDOW", IIf(SMSDLGCreateCopiesOfMainWindow(), 1, 0))

	For nLevel = 1 to 2
		Call CONFIGWriteKey(sFile, "MAPWINDOW" & nLevel, "ID", Str$(SMSDLGSelectedMapperWID(nLevel)))
		Call CONFIGWriteKey(sFile, "MAPWINDOW" & nLevel, "NAME", WindowInfo(SMSDLGSelectedMapperWID(nLevel), WIN_INFO_NAME))

		Call CONFIGWriteKey(sFile, "SITETABLE" & nLevel, "NAME", SMSDLGGetSiteTab(nLevel))
		Call CONFIGWriteKey(sFile, "SITETABLE" & nLevel, "SITEIDCOLUMN", SMSDLGGetSiteColumn(nLevel, "SITEID"))
		If nLevel = 1 Then
			Call CONFIGWriteKey(sFile, "SITETABLE" & nLevel, "UNIQUEVALUES", IIf(SMSDLGCheckForNonUniqueValues(), 1, 0))
		End If

		Call CONFIGWriteKey(sFile, "MAPOPTIONS" & nLevel, "ADDLAYER", IIf(SMSDLGAddSiteAsLayer(nLevel), 1, 0))
		Call CONFIGWriteKey(sFile, "MAPOPTIONS" & nLevel, "OVERRIDE", IIf(SMSDLGStyleOverideSiteLayer(nLevel), 1, 0))
		Call CONFIGWriteKey(sFile, "MAPOPTIONS" & nLevel, "TURNOFF", IIf(SMSDLGTurnOffSiteLayer(nLevel), 1, 0))

		Call CONFIGWriteKey(sFile, "MAPOPTIONS" & nLevel, "ZOOMTYPE", SMSDLGGetZoomType(nLevel))
		Call CONFIGWriteKey(sFile, "MAPOPTIONS" & nLevel, "KEEPZOOM", IIf(SMSDLGKeepCurrentZoom(nLevel), 1, 0))
		Call CONFIGWriteKey(sFile, "MAPOPTIONS" & nLevel, "ZOOMWIDTH", SMSDLGGetZoomWidth(nLevel))
	Next

	Exit Sub
'--------------------
ErrorOccured:
	Note Err() & " " & Error$() & " SMSDLGSaveUserSettings"

End Sub

'**********************************************************************
'**********************************************************************
Sub SMSDLGLoadUserSettings(ByVal sFile As String)

Dim	nLevel, nWID As Integer,
	sName As String

OnError GoTo ErrorOccured

	If not FileExists(sFile) Then
		Exit Sub
	End If

	mnWindowType				= Val(CONFIGReadKey(sFile, "OUTPUT", "WINDOWTYPE"))

'	mnSelectedMainWID			= Val(CONFIGReadKey(sFile, "OUTPUT", "MAINWINDOWID"))
	sName					= CONFIGReadKey(sFile, "OUTPUT", "MAINWINDOWNAME")
	mnSelectedMainWID			= WINGetIDFromTitle(sName)

	mbPrintJPG				= (CONFIGReadKey(sFile, "OUTPUT", "JPG") = "1")
	mbPrintPNG				= (CONFIGReadKey(sFile, "OUTPUT", "PNG") = "1")
	mbPrintPDF				= (CONFIGReadKey(sFile, "OUTPUT", "PDF") = "1")

	mnPDFDriver				= Val(CONFIGReadKey(sFile, "OUTPUT", "PDFDRIVER"))
	mnImageResolution			= Val(CONFIGReadKey(sFile, "OUTPUT", "RESOLUTION"))
	mnFileNameType				= Val(CONFIGReadKey(sFile, "OUTPUT", "FILENAMETYPE"))

	msOutputFolder				= CONFIGReadKey(sFile, "OUTPUT", "OUTPUTFOLDER")

	mnDelayNextSiteItem			= Val(CONFIGReadKey(sFile, "OUTPUT", "WAITONNEXTSITE"))
	mnDelayPrintItem			= Val(CONFIGReadKey(sFile, "OUTPUT", "WAITONPRINT"))

	mbCreateCopiesOfMainWindow	= (CONFIGReadKey(sFile, "OUTPUT", "CLONEMAINWINDOW") = "1")

	For nLevel = 1 to 2
	'	marrSelectedMapperWID(nLevel)	= Val(CONFIGReadKey(sFile,  "MAPWINDOW" & nLevel, "ID"))
		sName					= CONFIGReadKey(sFile, "MAPWINDOW" & nLevel, "NAME")
		marrSelectedMapperWID(nLevel)	= WINGetIDFromTitle(sName)

		marrSiteTab(nLevel)			= CONFIGReadKey(sFile, "SITETABLE" & nLevel, "NAME")
		marrColumnSiteID(nLevel)		= CONFIGReadKey(sFile, "SITETABLE" & nLevel, "SITEIDCOLUMN")
		If nLevel = 1 Then
			mbCheckForNonUniqueValues	= (CONFIGReadKey(sFile, "SITETABLE" & nLevel, "UNIQUEVALUES") = "1")
		End If

		marrAddSiteAsLayer(nLevel)		= (CONFIGReadKey(sFile, "MAPOPTIONS" & nLevel, "ADDLAYER") = "1")
		marrStyleOverrideSiteLayer(nLevel)	= (CONFIGReadKey(sFile, "MAPOPTIONS" & nLevel, "OVERRIDE") = "1")
		marrTurnOffSiteLayer(nLevel)		= (CONFIGReadKey(sFile, "MAPOPTIONS" & nLevel, "TURNOFF") = "1")

		marrZoomType(nLevel)			= Val(CONFIGReadKey(sFile, "MAPOPTIONS" & nLevel, "ZOOMTYPE"))
		marrKeepZoom(nLevel)			= (CONFIGReadKey(sFile, "MAPOPTIONS" & nLevel, "KEEPZOOM") = "1")
		marrZoomWidth(nLevel)			= Val(CONFIGReadKey(sFile, "MAPOPTIONS" & nLevel, "ZOOMWIDTH"))
	Next

	Exit Sub
'--------------------
ErrorOccured:
	Note Err() & " " & Error$() & " SMSDLGLoadUserSettings"

End Sub
